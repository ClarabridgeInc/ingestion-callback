// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: nlp/nlp_spacy_service/sentence.proto

package nlpspacyservice

import (
	nlpbase "github.com/ClarabridgeInc/ingestion-callback/internal/pb/nlpbase"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
// A Sentence is a list of tokens
type Sentence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *Sentence) Reset() {
	*x = Sentence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlp_nlp_spacy_service_sentence_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentence) ProtoMessage() {}

func (x *Sentence) ProtoReflect() protoreflect.Message {
	mi := &file_nlp_nlp_spacy_service_sentence_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentence.ProtoReflect.Descriptor instead.
func (*Sentence) Descriptor() ([]byte, []int) {
	return file_nlp_nlp_spacy_service_sentence_proto_rawDescGZIP(), []int{0}
}

func (x *Sentence) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

//*
// Token
//
// text               The token's original text.
// normal_form        The token's lemma.
// speech_part        Part of speech tag.
// morph_attributes   A list of the morphological features.
// head               Position of head token, indexed from 1. Index 0 is reserved for the root token.
// ud_relation_type   Dependency relation type between this token and its head.
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text            string                        `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	NormalForm      string                        `protobuf:"bytes,2,opt,name=normal_form,json=normalForm,proto3" json:"normal_form,omitempty"`
	SpeechPart      nlpbase.SpeechPart            `protobuf:"varint,3,opt,name=speech_part,json=speechPart,proto3,enum=nlp.SpeechPart" json:"speech_part,omitempty"`
	MorphAttributes []nlpbase.MorphFeatValue      `protobuf:"varint,4,rep,packed,name=morph_attributes,json=morphAttributes,proto3,enum=nlp.MorphFeatValue" json:"morph_attributes,omitempty"`
	Head            int32                         `protobuf:"varint,5,opt,name=head,proto3" json:"head,omitempty"`
	UdRelationType  nlpbase.UniversalRelationType `protobuf:"varint,6,opt,name=ud_relation_type,json=udRelationType,proto3,enum=nlp.UniversalRelationType" json:"ud_relation_type,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nlp_nlp_spacy_service_sentence_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_nlp_nlp_spacy_service_sentence_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_nlp_nlp_spacy_service_sentence_proto_rawDescGZIP(), []int{1}
}

func (x *Token) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Token) GetNormalForm() string {
	if x != nil {
		return x.NormalForm
	}
	return ""
}

func (x *Token) GetSpeechPart() nlpbase.SpeechPart {
	if x != nil {
		return x.SpeechPart
	}
	return nlpbase.SpeechPart(0)
}

func (x *Token) GetMorphAttributes() []nlpbase.MorphFeatValue {
	if x != nil {
		return x.MorphAttributes
	}
	return nil
}

func (x *Token) GetHead() int32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *Token) GetUdRelationType() nlpbase.UniversalRelationType {
	if x != nil {
		return x.UdRelationType
	}
	return nlpbase.UniversalRelationType(0)
}

var File_nlp_nlp_spacy_service_sentence_proto protoreflect.FileDescriptor

var file_nlp_nlp_spacy_service_sentence_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6e, 0x6c, 0x70, 0x2f, 0x6e, 0x6c, 0x70, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x6c, 0x70, 0x2e, 0x6e, 0x6c, 0x70, 0x5f,
	0x73, 0x70, 0x61, 0x63, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x15, 0x6e,
	0x6c, 0x70, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6e, 0x6c, 0x70, 0x2e, 0x6e, 0x6c, 0x70, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6e, 0x6c, 0x70,
	0x2e, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x52, 0x0a, 0x73, 0x70, 0x65,
	0x65, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x10, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x6e, 0x6c, 0x70, 0x2e, 0x4d, 0x6f, 0x72, 0x70, 0x68, 0x46, 0x65, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x75,
	0x64, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6e, 0x6c, 0x70, 0x2e, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x75, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x56, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6c, 0x70, 0x2e, 0x6e,
	0x6c, 0x70, 0x73, 0x70, 0x61, 0x63, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x13,
	0x53, 0x70, 0x61, 0x63, 0x79, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x50, 0x01, 0x5a, 0x12, 0x70, 0x62, 0x2f, 0x6e, 0x6c, 0x70, 0x73, 0x70, 0x61,
	0x63, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_nlp_nlp_spacy_service_sentence_proto_rawDescOnce sync.Once
	file_nlp_nlp_spacy_service_sentence_proto_rawDescData = file_nlp_nlp_spacy_service_sentence_proto_rawDesc
)

func file_nlp_nlp_spacy_service_sentence_proto_rawDescGZIP() []byte {
	file_nlp_nlp_spacy_service_sentence_proto_rawDescOnce.Do(func() {
		file_nlp_nlp_spacy_service_sentence_proto_rawDescData = protoimpl.X.CompressGZIP(file_nlp_nlp_spacy_service_sentence_proto_rawDescData)
	})
	return file_nlp_nlp_spacy_service_sentence_proto_rawDescData
}

var file_nlp_nlp_spacy_service_sentence_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_nlp_nlp_spacy_service_sentence_proto_goTypes = []interface{}{
	(*Sentence)(nil),                   // 0: nlp.nlp_spacy_service.Sentence
	(*Token)(nil),                      // 1: nlp.nlp_spacy_service.Token
	(nlpbase.SpeechPart)(0),            // 2: nlp.SpeechPart
	(nlpbase.MorphFeatValue)(0),        // 3: nlp.MorphFeatValue
	(nlpbase.UniversalRelationType)(0), // 4: nlp.UniversalRelationType
}
var file_nlp_nlp_spacy_service_sentence_proto_depIdxs = []int32{
	1, // 0: nlp.nlp_spacy_service.Sentence.tokens:type_name -> nlp.nlp_spacy_service.Token
	2, // 1: nlp.nlp_spacy_service.Token.speech_part:type_name -> nlp.SpeechPart
	3, // 2: nlp.nlp_spacy_service.Token.morph_attributes:type_name -> nlp.MorphFeatValue
	4, // 3: nlp.nlp_spacy_service.Token.ud_relation_type:type_name -> nlp.UniversalRelationType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_nlp_nlp_spacy_service_sentence_proto_init() }
func file_nlp_nlp_spacy_service_sentence_proto_init() {
	if File_nlp_nlp_spacy_service_sentence_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nlp_nlp_spacy_service_sentence_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sentence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nlp_nlp_spacy_service_sentence_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nlp_nlp_spacy_service_sentence_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nlp_nlp_spacy_service_sentence_proto_goTypes,
		DependencyIndexes: file_nlp_nlp_spacy_service_sentence_proto_depIdxs,
		MessageInfos:      file_nlp_nlp_spacy_service_sentence_proto_msgTypes,
	}.Build()
	File_nlp_nlp_spacy_service_sentence_proto = out.File
	file_nlp_nlp_spacy_service_sentence_proto_rawDesc = nil
	file_nlp_nlp_spacy_service_sentence_proto_goTypes = nil
	file_nlp_nlp_spacy_service_sentence_proto_depIdxs = nil
}
